
// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Classifies leads based on their likelihood of converting using AI.
 *
 * - classifyLeadInterest - A function that classifies lead interest.
 * - ClassifyLeadInterestInput - The input type for the classifyLeadInterest function.
 * - ClassifyLeadInterestOutput - The return type for the classifyLeadInterest function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const ClassifyLeadInterestInputSchema = z.object({
  calculatorInteraction: z
    .number()
    .describe(
      'The number of times the lead has interacted with the insurance premium calculator.'
    ),
  websiteVisits: z
    .number()
    .describe('The number of times the lead has visited the website.'),
  age: z.number().describe('The age of the lead.'),
  region: z.string().describe('The geographic region of the lead.'),
  vehicleType: z.string().describe('The type of vehicle the lead owns.'),
});
export type ClassifyLeadInterestInput = z.infer<
  typeof ClassifyLeadInterestInputSchema
>;

const ClassifyLeadInterestOutputSchema = z.object({
  interestLevel: z
    .enum(['hot', 'warm', 'cold'])
    .describe(
      "مستوى اهتمام العميل المحتمل، يمكن أن يكون 'حارًا' أو 'دافئًا' أو 'باردًا'. العملاء المحتملون 'الحارون' هم الأكثر احتمالية للتحويل، بينما العملاء المحتملون 'الباردون' هم الأقل احتمالية."
    ),
  score: z
    .number()
    .describe(
      'A numerical score representing the lead interest level, from 0 to 1. Higher score means more interest.'
    ),
  rationale: z
    .string()
    .describe(
      'A brief explanation of why the lead was classified at the given interest level.'
    ),
});
export type ClassifyLeadInterestOutput = z.infer<
  typeof ClassifyLeadInterestOutputSchema
>;

export async function classifyLeadInterest(
  input: ClassifyLeadInterestInput
): Promise<ClassifyLeadInterestOutput> {
  return classifyLeadInterestFlow(input);
}

const classifyLeadInterestPrompt = ai.definePrompt({
  name: 'classifyLeadInterestPrompt',
  input: {schema: ClassifyLeadInterestInputSchema},
  output: {schema: ClassifyLeadInterestOutputSchema},
  prompt: `أنت خبير ذكاء اصطناعي في تأهيل العملاء المحتملين، مكلف بتصنيف عملاء التأمين المحتملين بناءً على احتمالية تحولهم إلى عملاء فعليين.

  بالنظر إلى المعلومات التالية حول عميل محتمل، صنف مستوى اهتمامه كـ "hot" (حار)، أو "warm" (دافئ)، أو "cold" (بارد)، وقدم مبررًا لتصنيفك. أيضًا، قم بتعيين درجة من 0 إلى 1 تشير إلى احتمالية التحويل.

  تفاعلات الحاسبة: {{{calculatorInteraction}}}
  زيارات الموقع: {{{websiteVisits}}}
  العمر: {{{age}}}
  المنطقة: {{{region}}}
  نوع المركبة: {{{vehicleType}}}

  ضع في اعتبارك المعايير التالية:

  - العملاء المحتملون الذين تفاعلوا بشكل متكرر مع حاسبة التأمين، وزاروا الموقع عدة مرات، وهم في فئة عمرية مناسبة، هم أكثر عرضة للاهتمام الشديد (حار).
  - العملاء المحتملون الذين لديهم بعض التفاعل ولكن زيارات أقل تكرارًا يمكن اعتبارهم دافئين.
  - العملاء المحتملون ذوو التفاعل الأدنى والزيارات القليلة هم على الأرجح باردون.

  يجب أن يكون interestLevel واحدًا من هذه القيم الثلاث: hot، warm، cold.
  يجب أن تكون الدرجة رقمًا بين 0 و 1.
  يجب أن يكون المبرر شرحًا موجزًا لسبب تصنيف العميل المحتمل على هذا النحو.
`,
});

const classifyLeadInterestFlow = ai.defineFlow(
  {
    name: 'classifyLeadInterestFlow',
    inputSchema: ClassifyLeadInterestInputSchema,
    outputSchema: ClassifyLeadInterestOutputSchema,
  },
  async input => {
    const {output} = await classifyLeadInterestPrompt(input);
    return output!;
  }
);
